##Our goal is to create randomly generated album covers with:
##Learn how to use the function display_cover
##Loading a random page from Wikipedia
##Extracting the Title of the Article
##Displaying the Album Cover

##Import libraries
from IPython.display import Image as IPythonImage
from PIL import Image
from PIL import ImageFont
from PIL import ImageDraw

##Helper function to superimpose text on image
def display_cover(top,bottom ):
    """This fucntoin
    """
    import requests
    
    name='album_art_raw.png'
    ##Now let's make get an album cover.
    ##https://picsum.photos/ is a free service that offers random images.
    ##Let's get a random image:
    album_art_raw = requests.get('https://picsum.photos/500/500/?random')
    ##and save it as 'album_art_raw.png'
    with open(name,'wb') as album_art_raw_file:
       album_art_raw_file.write(album_art_raw.content)
    ##Now that we have our raw image, let's open it 
    ##and write our band and album name on it
    img = Image.open("album_art_raw.png")
    draw = ImageDraw.Draw(img)

    ##We'll choose a font for our band and album title, 
    ##run "% ls /usr/share/fonts/truetype/dejavu" in a cell to see what else is available,
    ##or download your own .ttf fonts!
    band_name_font = ImageFont.truetype("/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf", 25) #25pt font
    album_name_font = ImageFont.truetype("/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf", 20) # 20pt font

    ##the x,y coordinates for where our album name and band name text will start
    ##counted from the top left of the picture (in pixels)
    band_x, band_y = 50, 50
    album_x, album_y = 50, 400

    ##Our text should be visible on any image. A good way
    ##of accomplishing that is to use white text with a 
    ##black border. We'll use the technique shown here to draw the border:
    ##https://mail.python.org/pipermail/image-sig/2009-May/005681.html
    outline_color ="black"

    draw.text((band_x-1, band_y-1), top, font=band_name_font, fill=outline_color)
    draw.text((band_x+1, band_y-1), top, font=band_name_font, fill=outline_color)
    draw.text((band_x-1, band_y+1), top, font=band_name_font, fill=outline_color)
    draw.text((band_x+1, band_y+1), top, font=band_name_font, fill=outline_color)

    draw.text((album_x-1, album_y-1), bottom , font=album_name_font, fill=outline_color)
    draw.text((album_x+1, album_y-1), bottom , font=album_name_font, fill=outline_color)
    draw.text((album_x-1, album_y+1), bottom , font=album_name_font, fill=outline_color)
    draw.text((album_x+1, album_y+1), bottom , font=album_name_font, fill=outline_color)

    draw.text((band_x,band_y),top,(255,255,255),font=band_name_font)
    draw.text((album_x, album_y),bottom,(255,255,255),font=album_name_font)

    return img
    
## 1) Learn how to use the function display_cover
img=display_cover(top='top1',bottom='bottom2')
img.save('sample-out.png')
IPythonImage(filename='sample-out.png')

##Question 1) Use the display_cover function to display the image with the name Python on the top and Data Science on the bottom. Save the image as 'sample-out.png'.
img=display_cover(top='Python', bottom='Data Science')
img.save('sample-out.png')
IPythonImage(filename='sample-out.png')

## 2): Loading a random page from Wikipedia
import requests
wikipedia_link='https://en.wikipedia.org/wiki/Special:Random'

##Question 2) Get Wikipedia page is converted to a string
raw_random_wikipedia_page = requests.get(wikipedia_link)
page = raw_random_wikipedia_page.text
print(page)

## 3): Extracting the Title of the Article
##find index of ' <title>title - Wikipedia</title>' we need 
startIndex = page.find('<title>')
endIndex = page.find('</title>')
##because we only need the title, not the string starts with '<title>',
##so we add 7 to startIndex, then slice out the title
result = page[startIndex + 7 : endIndex]
print(result)

##Question 3 Next get rid of the term - Wikipedia from the title and assign the result to the band_title For example you can use the function or method strip or replace.
band_title = result.replace(' - Wikipedia', '')
print(band_title)

##Question 4) Repeat the second and third step, to extract the title of a second Wikipedia article but use the result to album_title
raw_random_wikipedia_page = requests.get(wikipedia_link)
page = raw_random_wikipedia_page.text
print(page)
startIndex = page.find('<title>')
endIndex = page.find('</title>')
result = page[startIndex + 7 : endIndex]
print(result)
album_title = result.replace(' - Wikipedia', '')
print(album_title)

print("Your band: ", band_title)
print("Your album: ", album_title)

##Question 5) use the function display_cover to display the album cover with two random article titles representing the name of the band and the title of the album.
img=display_cover(top=band_title, bottom=album_title)
img.save('sample-out.png')
IPythonImage(filename='sample-out.png')
